{"version":3,"sources":["components/images/noInternet.png","components/images/winner.jpg","components/common/FormElements.js","constants/routes.js","components/users/login.jsx","components/users/newUser.jsx","constants/fbapis.js","components/users/forget.jsx","common/history.js","components/common/NoInternet.js","common/helper.jsx","components/bids/bidlist.jsx","components/bids/bidpage.jsx","components/bids/winner.jsx","App.js","constants/fb.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","button","container","display","flexWrap","menuButton","marginRight","textField","marginLeft","fontSize","borderBottomColor","borderColor","width","dense","marginTop","menu","valueContainer","flex","alignItems","overflow","info","backgroundColor","primary","main","chip","chipFocused","emphasize","type","noOptionsMessage","singleValue","placeholder","left","bottom","paper","zIndex","title","flexGrow","MButton","params","classes","Button","disabled","fullWidth","variant","name","className","onClick","startIcon","icon","children","MCard","Card","raised","CardHeader","Typography","component","subheader","price","CardMedia","style","height","paddingTop","image","imageTitle","CardContent","content","CardActions","actionEnabled","size","onChange","Copyright","align","Date","getFullYear","MTextField","TextField","key","id","select","label","clsx","value","SelectProps","MenuProps","helperText","data","map","option","MenuItem","required","error","multiline","autoFocus","onBlur","rows","utils","DateFnsUtils","DatePicker","disableToolbar","inputVariant","autoOk","format","allowKeyboardControl","onFocus","MMenu","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","str","console","log","mItems","menuitems","mi","idx","e","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MAppBar","iconbutton","handleIconClick","edge","AppBar","Toolbar","MSnackbar","Snackbar","vPos","hPos","autoHideDuration","ContentProps","message","action","close","BIDLIST","Login","props","snackClose","setState","snackMsg","snackOpen","handleChange","state","rememberMe","email","password","auth","gv","helper","showOverlay","doSignInWithEmailAndPassword","then","authUser","userId","user","uid","localStorage","setItem","hideOverlay","history","push","ROUTES","catch","preventDefault","passowrd","getItem","window","Android","contentLoaded","this","Container","maxWidth","CssBaseline","flexDirection","Avatar","FormControlLabel","control","Checkbox","checked","Grid","item","xs","Link","href","Box","mt","Component","NewUser","componentDidMount","getDataFromDB","current","total","apis","url","on","snapshot","object","val","_list","Object","keys","apis_copy","users","getIndex","db","gender","fname","lname","cpassword","cno","secretQuestion","secretAnswer","findIfUserExists","doCreateUserWithEmailAndPassword","child","set","bids","setTimeout","doLogout","code","target","i","length","noValidate","FormControl","FormLabel","RadioGroup","Radio","Forgot","getQuestionsByValue","questionsData","userFound","detailsVerified","newPassword","confirmPassword","userRef","getCurrentUser","updatePassword","update","uanswer","answer","orderByChild","equalTo","once","v","ques","question","createBrowserHistory","basename","process","NoInternet","checkInternet","src","require","alt","Helper","array","document","getElementsByTagName","classList","add","overlay","createElement","spinner","spinner_inner1","spinner_inner2","appendChild","body","getElementById","remove","elem","removeChild","currentUser","createUserWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","fb","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","auctions","ref","products","bid","removeItem","Bidlist","auctionsIndex","auctionsList","activeDaily","getActiveAuctionsList","activeWeekly","index","sd","start_date","nw","getMonth","getDate","is_active","now","ed","setDate","end_date","getTime","auction_name","product_key","getDay","firebase","afterUpdate","prodsIndex","prodsData","pl","e1","j","e2","JSON","parse","stringify","parseInt","auction_id","productList","handleAppBarClose","productInfo","onAppBarClose","list","mCards","marginBottom","photo_url","description","BidPage","canUserBid","userBids","auction_key","ud","biddt","nd","bidValue","undefined","bid_price","user_key","showToast","handleInputChange","parseFloat","Paper","elevation","min","max","step","inputProps","Winner","findWinnerByTime","_bids","new_low_date","edate","declareWinner","findWinner","bidValues","getBidValuesFromBids","minBid","Math","bidsWithMin","getBidsByValue","refinedBids","removeInvalidBids","objCopy","winner_name","bid_amount","bidlist","splice","showMessage","closedAuctions","auction_data","auction_list","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","updateState","us","database","ht","hl","path","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ca2bd5f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noInternet.0209214b.png\";","module.exports = __webpack_public_path__ + \"static/media/winner.0c5381be.jpg\";","import React from \"react\";\r\nimport clsx from \"clsx\";\r\n/* import PropTypes from \"prop-types\";\r\nimport NoSsr from \"@material-ui/core/NoSsr\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\"; */\r\nimport \"date-fns\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport { makeStyles, emphasize /* useTheme */ } from \"@material-ui/core/styles\";\r\n/* import \"react-inputs-validation/lib/react-inputs-validation.min.css\"; */\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport {\r\n  IconButton,\r\n  Snackbar /* , Icon  */,\r\n  Typography,\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Menu\r\n} from \"@material-ui/core/\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\n//import Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    color: \"white\"\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    fontSize: 12,\r\n    \"& label.Mui-focused\": {\r\n      color: \"#2AAA9E\"\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#2AAA9E\"\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"1px solid rgba(224, 224, 224, 1)\"\r\n      },\r\n      \"& fieldset legend\": {\r\n        width: 200,\r\n        borderColor: \"#2AAA9E\"\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#00A0DB\"\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#2AAA9E\"\r\n      }\r\n    } /* ,\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'red',\r\n      borderWidth: 2,\r\n    },\r\n    '& input:invalid +fieldset legend': {\r\n      color: 'red'\r\n    } */\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(0)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25)\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(theme.palette.type === \"light\" ? theme.palette.grey[300] : theme.palette.grey[700], 0.08)\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  singleValue: {\r\n    fontSize: 16\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nfunction MDialog(params) {\r\n  const classes = useStyles();\r\n  let buttonHTML = function(buttons) {\r\n    return buttons.map(button => {\r\n      return (\r\n        <MButton onClick={params.close} key={button.value} color={button.color}>\r\n          {button.value}\r\n        </MButton>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={params.open}\r\n      onClose={params.close}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\" disableTypography className={classes.root}>\r\n        {params.title}\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={params.close}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">{params.children}</DialogContentText>\r\n      </DialogContent>\r\n\r\n      <DialogActions>{buttonHTML(params.buttons)}</DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\nfunction MButton(params) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      disabled={params.disabled ? params.disabled : false}\r\n      fullWidth={params.fullWidth}\r\n      variant={params.variant ? params.variant : \"contained\"}\r\n      color={params.color ? params.color : \"primary\"}\r\n      name={params.name}\r\n      className={classes.button}\r\n      onClick={params.onClick}\r\n      startIcon={params.icon}\r\n    >\r\n      {params.children}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction MSwithch(params) {\r\n  return (\r\n    <FormControlLabel\r\n      control={<Switch name={params.name} id={params.id} checked={params.isSelected} onChange={params.onChange} />}\r\n      value={params.value}\r\n      label={params.label}\r\n      labelPlacement={params.labelPlacement ? params.labelPlacement : \"start\"}\r\n    />\r\n  );\r\n}\r\nfunction MCard(params) {\r\n  /* const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ]; */\r\n  return (\r\n    <Card raised={true}>\r\n      <CardHeader\r\n        title={\r\n          <Typography variant=\"h6\" color=\"primary\" component=\"p\">\r\n            {params.title}\r\n          </Typography>\r\n        }\r\n        subheader={\r\n          <Typography variant=\"subtitle1\" color=\"secondary\" component=\"p\">\r\n            {params.price}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardMedia\r\n        style={{\r\n          height: 0,\r\n          paddingTop: \"56.25%\" // 16:9\r\n        }}\r\n        image={params.image}\r\n        title={params.imageTitle}\r\n      />\r\n      <CardContent style={{}}>\r\n        <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n          {params.content}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions style={{ display: params.actionEnabled ? \"block\" : \"none\" }}>\r\n        <Button name={params.name} size=\"small\" onClick={params.onChange}>\r\n          <Typography variant=\"button\" color=\"textSecondary\" component=\"p\">\r\n            Tap to bid\r\n          </Typography>\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\nfunction MCheckbox(params) {\r\n  return (\r\n    <FormGroup>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            name={params.name}\r\n            id={params.id}\r\n            color={\"primary\"}\r\n            checked={params.value}\r\n            onChange={params.onChange}\r\n            value={params.name}\r\n          />\r\n        }\r\n        label={params.label}\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © biD&Win \"}\r\n      {new Date().getFullYear()}\r\n    </Typography>\r\n  );\r\n}\r\nfunction MTextField(params) {\r\n  const classes = useStyles();\r\n  if (params.type === \"select\") {\r\n    return (\r\n      <TextField\r\n        key={params.name}\r\n        id={params.name}\r\n        select\r\n        label={params.label}\r\n        disabled={params.disabled}\r\n        fullWidth={params.fullWidth ? params.fullWidth : false}\r\n        margin=\"dense\"\r\n        onChange={params.onChange}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        value={params.value}\r\n        name={params.name}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu\r\n          }\r\n        }}\r\n        helperText={params.helperText}\r\n        variant=\"outlined\"\r\n      >\r\n        {params.data.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  } else if (\r\n    params.type === \"text\" ||\r\n    params.type === \"number\" ||\r\n    params.type === \"email\" ||\r\n    params.type === \"password\"\r\n  ) {\r\n    return (\r\n      <TextField\r\n        id={params.id}\r\n        disabled={params.disabled ? params.disabled : false}\r\n        required={params.required ? params.required : false}\r\n        error={params.error ? params.error : false}\r\n        multiline={params.multiline ? params.multiline : false}\r\n        type={params.type}\r\n        autoFocus={params.autoFocus ? params.autoFocus : false}\r\n        name={params.name}\r\n        fullWidth={params.fullWidth ? params.fullWidth : false}\r\n        label={\"\" + params.label}\r\n        className={clsx(classes.textField, classes.dense)}\r\n        margin=\"dense\"\r\n        onBlur={params.onBlur}\r\n        rows={params.rows ? params.rows : 1}\r\n        onChange={params.onChange}\r\n        value={params.value}\r\n        variant={params.variant ? params.variant : \"outlined\"}\r\n        helperText={params.helperText}\r\n      />\r\n    );\r\n  } else if (params.type === \"date\") {\r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <DatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n          autoOk={true}\r\n          disabled={params.disabled ? params.disabled : false}\r\n          helperText={params.helperText}\r\n          fullWidth={params.fullWidth ? params.fullWidth : false}\r\n          format=\"dd/MM/yyyy\"\r\n          margin=\"dense\"\r\n          className={clsx(classes.textField, classes.dense)}\r\n          id={params.id ? params.id : params.name}\r\n          allowKeyboardControl={true}\r\n          label={params.label}\r\n          value={params.value}\r\n          onChange={params.onChange}\r\n          onFocus={params.onFocus}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n}\r\nfunction STable(params) {\r\n  let data = params.data;\r\n  let tbody = \"\";\r\n  for (let i = 0; i < data.length; i++) {\r\n    const e = data[i];\r\n    tbody += (\r\n      <tr>\r\n        <td>{e.name}</td>\r\n        <td>{e.bidPrice}</td>\r\n      </tr>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <table>\r\n        <th>\r\n          <td>Bider Name</td>\r\n          <td>Bider's Bid</td>\r\n        </th>\r\n        {tbody}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nfunction MMenu(params) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = str => {\r\n    setAnchorEl(null);\r\n    console.log(str);\r\n    params.handleClose(str);\r\n  };\r\n  const menuItems = params.menuitems;\r\n  const mItems = menuItems.map((mi, idx) => {\r\n    return (\r\n      <MenuItem key={idx} onClick={e => handleClose(mi.name)}>\r\n        {mi.value}\r\n      </MenuItem>\r\n    );\r\n  });\r\n  return (\r\n    <div style={{ marginRight: 0 }}>\r\n      <IconButton\r\n        aria-label=\"account of current user\"\r\n        aria-controls=\"menu-appbar\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenu}\r\n        color=\"inherit\"\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {mItems}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nfunction MAppBar(params) {\r\n  const classes = useStyles();\r\n  const handleMenu = event => {\r\n    params.handleIconClick();\r\n  };\r\n  const iconbutton = (\r\n    <IconButton onClick={handleMenu} edge=\"start\" color=\"inherit\" aria-label=\"back\">\r\n      <ArrowBackIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {params.icon ? iconbutton : \"\"}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            {params.name}\r\n          </Typography>\r\n          {params.menu}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\nfunction MSnackbar(params) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: params.vPos ? params.vPos : \"bottom\",\r\n        horizontal: params.hPos ? params.hPos : \"left\"\r\n      }}\r\n      open={params.open}\r\n      autoHideDuration={params.autoHideDuration ? params.autoHideDuration : 600000}\r\n      onClose={params.onClose}\r\n      className={classes.info}\r\n      ContentProps={{\r\n        \"aria-describedby\": \"message-id\"\r\n      }}\r\n      message={params.message}\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" className={classes.close} onClick={params.onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ]}\r\n    />\r\n  );\r\n}\r\n\r\nexport { MTextField, MButton, MDialog, MSwithch, MCheckbox, MSnackbar, Copyright, MCard, MAppBar, STable, MMenu };\r\n","export const LANDING = \"/\";\r\nexport const SIGN_UP = \"/newuser\";\r\nexport const SIGN_IN = \"/login\";\r\nexport const HOME = \"/home\";\r\nexport const BIDLIST = \"/bidlist\";\r\nexport const BIDPAGE = \"/bidpage\";\r\nexport const PASSWORD_FORGET = \"/forgot-password\";\r\nexport const WINNER = \"/winner\";\r\nexport const NOINTERNET = \"/nointernet\";\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { MButton, Copyright, MTextField, MSnackbar } from \"../common/FormElements\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onChange: this.handleChange(),\r\n      snackClose: this.snackClose(),\r\n      email: \"\",\r\n      passowrd: \"\",\r\n      error: \"\",\r\n      snackOpen: false,\r\n      snackMsg: \"\",\r\n      rememberMe: true\r\n    };\r\n    this.helper = this.props.helper;\r\n    if (localStorage.getItem(\"token\") != null && localStorage.getItem(\"remember_me\") != null) {\r\n      //console.log(\"31\");\r\n      this.props.history.push(ROUTES.BIDLIST);\r\n    } else {\r\n      try {\r\n        window.Android.contentLoaded();\r\n      } catch (error) {\r\n        //console.log(error);\r\n      }\r\n    }\r\n  }\r\n  snackClose = () => e => {\r\n    this.setState({ snackMsg: \"\", snackOpen: false });\r\n  };\r\n  handleChange = () => e => {\r\n    if (e.currentTarget.name === \"rememberMe\") {\r\n      if (!this.state.rememberMe) {\r\n        this.setState({ rememberMe: true });\r\n      } else {\r\n        this.setState({ rememberMe: false });\r\n      }\r\n    } else if (e.currentTarget.name === \"email\") {\r\n      this.setState({ email: e.currentTarget.value });\r\n    } else if (e.currentTarget.name === \"password\") {\r\n      this.setState({ password: e.currentTarget.value });\r\n    } else if (e.currentTarget.name === \"submit\") {\r\n      const { email, password } = this.state;\r\n      const auth = this.props.gv.auth;\r\n      this.helper.showOverlay();\r\n      this.helper\r\n        .doSignInWithEmailAndPassword(email, password, auth)\r\n        .then(authUser => {\r\n          this.props.gv.userId = authUser.user.uid;\r\n          localStorage.setItem(\"uid\", authUser.user.uid);\r\n          if (this.state.rememberMe) {\r\n            localStorage.setItem(\"remember_me\", \"remember_me\" + email);\r\n          }\r\n          localStorage.setItem(\"token\", \"token_\" + email);\r\n        })\r\n        .then(() => {\r\n          this.helper.hideOverlay();\r\n          this.props.history.push(ROUTES.BIDLIST);\r\n        })\r\n        .catch(error => {\r\n          this.helper.hideOverlay();\r\n          this.setState({ snackMsg: \"Password incorrect\", snackOpen: true }, () => {});\r\n          this.setState({ error });\r\n        });\r\n      e.preventDefault();\r\n    }\r\n  };\r\n  render() {\r\n    const { onChange, email, snackOpen, snackClose, snackMsg, rememberMe } = this.state;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div\r\n          style={{\r\n            marginTop: \"6em\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Avatar style={{ margin: 1, backgroundColor: \"#000\" }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form\r\n            style={{\r\n              width: \"100%\", // Fix IE 11 issue.\r\n              marginTop: 1\r\n            }}\r\n          >\r\n            <MTextField\r\n              required={true}\r\n              type=\"email\"\r\n              value={email}\r\n              name=\"email\"\r\n              fullWidth={true}\r\n              label=\"E-mail Address\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"E-mail\"\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              fullWidth={true}\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"Password\"\r\n            ></MTextField>\r\n            <FormControlLabel\r\n              control={<Checkbox checked name=\"rememberMe\" value={rememberMe} onChange={onChange} color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <MButton\r\n              style={{ margin: \"3px 0px 2px\" }}\r\n              value={\"Submit\"}\r\n              color={\"primary\"}\r\n              onClick={onChange}\r\n              fullWidth={true}\r\n              name={\"submit\"}\r\n            >\r\n              Login\r\n            </MButton>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href={ROUTES.PASSWORD_FORGET} variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href={ROUTES.SIGN_UP} variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <MSnackbar\r\n          autoHideDuration={4000}\r\n          open={snackOpen}\r\n          vPos={\"bottom\"}\r\n          hPos={\"left\"}\r\n          message={snackMsg}\r\n          onClose={snackClose}\r\n        ></MSnackbar>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport ChildFriendlyIcon from \"@material-ui/icons/ChildFriendly\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { MButton, MTextField, Copyright, MSnackbar } from \"../common/FormElements\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as APIS from \"../../constants/fbapis\";\r\nclass NewUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.helper = this.props.helper;\r\n    const db = this.props.gv.db;\r\n    this.state = {\r\n      onChange: this.handleChange(),\r\n      snackClose: this.snackClose(),\r\n      gender: \"female\",\r\n      fname: \"\",\r\n      lname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      cpassword: \"\",\r\n      cno: \"\",\r\n      secretQuestion: \"\",\r\n      secretAnswer: \"\",\r\n      users: [],\r\n      snackMsg: \"\",\r\n      snackOpen: false,\r\n      apis: [{ name: APIS.USERS, data: [], url: this.helper.users(db) }]\r\n    };\r\n    this.current = 0;\r\n    this.total = this.state.apis.length;\r\n  }\r\n  componentDidMount = () => {\r\n    this.helper.showOverlay();\r\n    this.getDataFromDB();\r\n  };\r\n  getDataFromDB = () => {\r\n    if (this.current < this.total) {\r\n      if (!this.props.gv[\"\" + this.state.apis[this.current].name]) {\r\n        this.state.apis[this.current].url.on(\"value\", snapshot => {\r\n          const object = snapshot.val();\r\n          if (object === null) {\r\n            this.current++;\r\n            this.getDataFromDB();\r\n          } else {\r\n            const _list = Object.keys(object).map(key => ({\r\n              ...object[key],\r\n              id: key\r\n            }));\r\n            let apis_copy = this.state.apis;\r\n            apis_copy[this.current][\"data\"] = _list;\r\n            this.setState(\r\n              {\r\n                apis: apis_copy\r\n              },\r\n              () => {\r\n                this.current++;\r\n                this.getDataFromDB();\r\n              }\r\n            );\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ users: this.state.apis[this.helper.getIndex(this.state.apis, APIS.USERS)] }, () => {\r\n        this.current = 0;\r\n        this.helper.hideOverlay();\r\n      });\r\n    }\r\n  };\r\n  snackClose = () => e => {\r\n    this.setState({ snackMsg: \"\", snackOpen: false }, () => {});\r\n  };\r\n  handleChange = () => event => {\r\n    const auth = this.props.gv.auth;\r\n    const db = this.props.gv.db;\r\n    if (event.currentTarget.name === \"register\") {\r\n      const { gender, fname, lname, email, password, cpassword, cno, secretQuestion, secretAnswer } = this.state;\r\n      if (password === cpassword) {\r\n        if (!this.findIfUserExists(email)) {\r\n          this.helper.showOverlay();\r\n          this.helper\r\n            .doCreateUserWithEmailAndPassword(email, password, auth)\r\n            .then(authUser => {\r\n              this.props.gv.userId = authUser.user.uid;\r\n              localStorage.setItem(\"uid\", authUser.user.uid);\r\n              let userRef = this.helper.users(db);\r\n              return userRef.child(this.props.gv.userId).set({\r\n                email,\r\n                password,\r\n                cno,\r\n                fname,\r\n                lname,\r\n                gender,\r\n                secretQuestion,\r\n                secretAnswer,\r\n                bids: []\r\n              });\r\n            })\r\n            .then(() => {\r\n              this.helper.hideOverlay();\r\n              this.setState({\r\n                snackMsg: \"Congratulations! Your're registered with us, please sign-in\",\r\n                snackOpen: true\r\n              });\r\n              setTimeout(() => {\r\n                this.helper.doLogout(this.props);\r\n              }, 3000);\r\n            })\r\n            .catch(error => {\r\n              console.log(error.code);\r\n              if (error.code === \"auth/email-already-in-use\") {\r\n                setTimeout(() => {\r\n                  this.helper.hideOverlay();\r\n                  this.props.history.push(ROUTES.SIGN_IN);\r\n                }, 3000);\r\n                this.setState({ snackMsg: \"You're already registered with us! Please login\", snackOpen: true });\r\n              }\r\n              this.setState({ error });\r\n            });\r\n        } else {\r\n          this.setState({ snackMsg: \"User already exist!\", snackOpen: true });\r\n        }\r\n      } else {\r\n        this.setState({ snackMsg: \"Password and confirm password doesn't match\", snackOpen: true });\r\n      }\r\n      event.preventDefault();\r\n    } else if (event.target.name === \"gender\") {\r\n      this.setState({ gender: event.target.value });\r\n    } else if (event.target.name === \"fname\") {\r\n      this.setState({ fname: event.target.value });\r\n    } else if (event.target.name === \"lname\") {\r\n      this.setState({ lname: event.target.value });\r\n    } else if (event.target.name === \"email\") {\r\n      this.setState({ email: event.target.value });\r\n    } else if (event.target.name === \"password\") {\r\n      this.setState({ password: event.target.value });\r\n    } else if (event.target.name === \"cpassword\") {\r\n      this.setState({ cpassword: event.target.value });\r\n    } else if (event.target.name === \"cno\") {\r\n      this.setState({ cno: event.target.value });\r\n    } else if (event.target.name === \"secretQuestion\") {\r\n      this.setState({ secretQuestion: event.target.value });\r\n    } else if (event.target.name === \"secretAnswer\") {\r\n      this.setState({ secretAnswer: event.target.value });\r\n    }\r\n  };\r\n  findIfUserExists = email => {\r\n    for (let i = 0; i < this.state.users.length; i++) {\r\n      const e = this.state.users[i];\r\n      if (e.email === email) {\r\n        console.log(\"found\");\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    const {\r\n      onChange,\r\n      gender,\r\n      fname,\r\n      lname,\r\n      email,\r\n      password,\r\n      cpassword,\r\n      cno,\r\n      secretQuestion,\r\n      secretAnswer,\r\n      snackMsg,\r\n      snackOpen,\r\n      snackClose\r\n    } = this.state;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div\r\n          style={{\r\n            marginTop: \"1em\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Avatar style={{ margin: 1, backgroundColor: \"#000\" }}>\r\n            <ChildFriendlyIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form\r\n            style={{\r\n              width: \"100%\", // Fix IE 11 issue.\r\n              marginTop: 1\r\n            }}\r\n            noValidate\r\n          >\r\n            <MTextField\r\n              required={true}\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              value={fname}\r\n              fullWidth={true}\r\n              label=\"First Name\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"First name\"\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"text\"\r\n              name=\"lname\"\r\n              value={lname}\r\n              fullWidth={true}\r\n              label=\"Last Name\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"Last name\"\r\n            ></MTextField>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\">Gender</FormLabel>\r\n              <RadioGroup aria-label=\"gender\" name=\"gender\" value={gender} onChange={onChange}>\r\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <MTextField\r\n              required={false}\r\n              type=\"number\"\r\n              name=\"cno\"\r\n              value={cno}\r\n              fullWidth={true}\r\n              label=\"Contact Number\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"Contact Number\"\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"email\"\r\n              value={email}\r\n              name=\"email\"\r\n              fullWidth={true}\r\n              label=\"E-mail\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"E-mail\"\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              fullWidth={true}\r\n              label=\"Password\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"Password\"\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"password\"\r\n              name=\"cpassword\"\r\n              value={cpassword}\r\n              fullWidth={true}\r\n              label=\"Confirm Password\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"Confirm Password\"\r\n            ></MTextField>\r\n            <MTextField\r\n              name={\"secretQuestion\"}\r\n              type={\"select\"}\r\n              data={[\r\n                { value: \"1\", label: \"What is your mother's year of birth?\" },\r\n                { value: \"2\", label: \"What is your family nick name?\" },\r\n                { value: \"3\", label: \"Where you met your life patner first time?\" }\r\n              ]}\r\n              label={\"Secret Question\"}\r\n              value={secretQuestion}\r\n              onChange={onChange}\r\n              fullWidth={true}\r\n              helperText={\"Select a Secret Question\"}\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"text\"\r\n              name=\"secretAnswer\"\r\n              value={secretAnswer}\r\n              fullWidth={true}\r\n              label=\"Your answer\"\r\n              margin=\"dense\"\r\n              onChange={onChange}\r\n              helperText=\"Answer is case insensitive\"\r\n            ></MTextField>\r\n\r\n            <MButton\r\n              name=\"register\"\r\n              style={{ margin: \"3px 0px 2px\" }}\r\n              value={\"Submit\"}\r\n              color={\"primary\"}\r\n              onClick={onChange}\r\n              fullWidth={true}\r\n            >\r\n              Register\r\n            </MButton>\r\n            <MSnackbar\r\n              autoHideDuration={5000}\r\n              open={snackOpen}\r\n              vPos={\"bottom\"}\r\n              hPos={\"left\"}\r\n              message={snackMsg}\r\n              onClose={snackClose}\r\n            ></MSnackbar>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href={ROUTES.LANDING} variant=\"body2\">\r\n                  Home\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href={ROUTES.SIGN_IN} variant=\"body2\">\r\n                  {\"Login\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={4}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default NewUser;\r\n","export const PRODUCTS = \"products\";\r\nexport const AUCTIONS = \"auctions\";\r\nexport const USERS = \"users\";\r\nexport const BIDLIST = \"bidlist\";\r\nexport const BID = \"bid\";\r\nexport const LOGOUT = \"logout\";\r\nexport const WINNER = \"winner\";\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { MButton, MTextField, Copyright, MSnackbar } from \"../common/FormElements\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nclass Forgot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.helper = this.props.helper;\r\n    this.state = {\r\n      onChange: this.handleChange(),\r\n      snackClose: this.snackClose(),\r\n      email: \"\",\r\n      user: null,\r\n      snackMsg: \"User doesn't exist!\",\r\n      snackOpen: false,\r\n      userFound: false,\r\n      newPassword: \"\",\r\n      confirmPassword: \"\",\r\n      detailsVerified: false,\r\n      questionsData: [\r\n        { value: \"1\", label: \"What is your mother's year of birth?\" },\r\n        { value: \"2\", label: \"What is your family nick name?\" },\r\n        { value: \"3\", label: \"Where you met your life patner first time?\" }\r\n      ],\r\n      question: \"\",\r\n      answer: \"\",\r\n      uanswer: \"\"\r\n    };\r\n  }\r\n  componentDidMount = () => {};\r\n  getQuestionsByValue = value => {\r\n    for (let i = 0; i < this.state.questionsData.length; i++) {\r\n      const e = this.state.questionsData[i];\r\n      if (e.value === value) {\r\n        return e.label;\r\n      }\r\n    }\r\n  };\r\n  snackClose = () => e => {\r\n    this.setState({ snackMsg: \"\", snackOpen: false });\r\n  };\r\n  handleChange = () => event => {\r\n    const db = this.props.gv.db;\r\n    const auth = this.props.gv.auth;\r\n    if (event.currentTarget.name === \"submit\" && !this.state.userFound) {\r\n      this.helper.showOverlay();\r\n      this.helper\r\n        .users(db)\r\n        .orderByChild(\"email\")\r\n        .equalTo(this.state.email)\r\n        .once(\"value\")\r\n        .then(v => {\r\n          this.helper.hideOverlay();\r\n          let object = v.val();\r\n          object = Object.keys(object).map(key => ({\r\n            ...object[key],\r\n            id: key\r\n          }));\r\n          object = object[0];\r\n          this.setState({ user: object });\r\n          if (object) {\r\n            let ques = this.getQuestionsByValue(object.secretQuestion);\r\n            this.setState({ question: ques, answer: object.secretAnswer }, () => {\r\n              this.setState({ userFound: true });\r\n            });\r\n          } else {\r\n            this.setState({ snackMsg: \"User doesn't exist!\", snackOpen: true }, () => {});\r\n          }\r\n        });\r\n    } else if (event.currentTarget.name === \"submit\" && this.state.userFound && this.state.detailsVerified) {\r\n      this.helper.showOverlay();\r\n      if (this.state.newPassword === this.state.confirmPassword) {\r\n        let email = this.state.user.email;\r\n        let password = this.state.user.password;\r\n        this.helper.doSignInWithEmailAndPassword(email, password, auth).then(authUser => {\r\n          let userRef = this.helper.user(this.state.user.id, db);\r\n          let user = this.helper.getCurrentUser(auth);\r\n          user\r\n            .updatePassword(this.state.newPassword)\r\n            .then(() => {\r\n              userRef.update({ password: this.state.newPassword }).then(() => {\r\n                this.setState({ snackMsg: \"Password changed\", snackOpen: true });\r\n                setTimeout(() => {\r\n                  this.helper.hideOverlay();\r\n                  this.helper.doLogout(this.props);\r\n                }, 2000);\r\n              });\r\n            })\r\n            .catch(function(error) {\r\n              // An error happened.\r\n            });\r\n        });\r\n      } else {\r\n        this.setState({ snackMsg: \"Password and confirm password doesn't match\", snackOpen: true });\r\n      }\r\n    } else if (event.currentTarget.name === \"submit\" && this.state.userFound) {\r\n      if (this.state.uanswer === this.state.answer) {\r\n        this.setState({ snackMsg: \"Answer matched, please change password.\", snackOpen: true, detailsVerified: true });\r\n      } else {\r\n        this.setState({ snackMsg: \"Answer doesn't match with our records.\", snackOpen: true });\r\n      }\r\n    } else if (event.currentTarget.name === \"email\") {\r\n      this.setState({ email: event.currentTarget.value });\r\n    } else if (event.currentTarget.name === \"newPassword\") {\r\n      this.setState({ newPassword: event.currentTarget.value });\r\n    } else if (event.currentTarget.name === \"confirmPassword\") {\r\n      this.setState({ confirmPassword: event.currentTarget.value });\r\n    } else if (event.currentTarget.name === \"uanswer\") {\r\n      this.setState({ uanswer: event.currentTarget.value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      email,\r\n      snackMsg,\r\n      userFound,\r\n      snackOpen,\r\n      snackClose,\r\n      newPassword,\r\n      confirmPassword,\r\n      question,\r\n      detailsVerified,\r\n      uanswer\r\n    } = this.state;\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div\r\n          className=\"base\"\r\n          style={{\r\n            margin: \"1em\",\r\n            alignItems: \"center\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <Avatar style={{ backgroundColor: \"#000\", margin: \"1em\" }}>\r\n            <VpnKeyIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Forgot Password\r\n          </Typography>\r\n        </div>\r\n        <form\r\n          style={{\r\n            width: \"100%\", // Fix IE 11 issue.\r\n            marginTop: 1\r\n          }}\r\n          noValidate\r\n        >\r\n          <div\r\n            className=\"getEmail\"\r\n            style={{\r\n              display: userFound === true ? \"none\" : \"block\"\r\n            }}\r\n          >\r\n            <MTextField\r\n              required={true}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              fullWidth={true}\r\n              label=\"E-mail\"\r\n              margin=\"dense\"\r\n              value={email}\r\n              onChange={onChange}\r\n              helperText=\"E-mail\"\r\n            ></MTextField>\r\n          </div>\r\n          <div\r\n            className=\"getVerification\"\r\n            style={{\r\n              display: userFound === true && detailsVerified === false ? \"block\" : \"none\"\r\n            }}\r\n          >\r\n            <Typography component=\"h1\" variant=\"subtitle1\">\r\n              {question}\r\n            </Typography>\r\n            <MTextField\r\n              required={true}\r\n              type=\"text\"\r\n              name=\"uanswer\"\r\n              fullWidth={true}\r\n              label=\"Your answer here\"\r\n              margin=\"dense\"\r\n              value={uanswer}\r\n              onChange={onChange}\r\n            ></MTextField>\r\n          </div>\r\n          <div\r\n            className=\"setPassword\"\r\n            style={{\r\n              display: detailsVerified === false ? \"none\" : \"block\"\r\n            }}\r\n          >\r\n            <MTextField\r\n              required={true}\r\n              type=\"password\"\r\n              name=\"newPassword\"\r\n              fullWidth={true}\r\n              label=\"New password\"\r\n              margin=\"dense\"\r\n              value={newPassword}\r\n              onChange={onChange}\r\n            ></MTextField>\r\n            <MTextField\r\n              required={true}\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              fullWidth={true}\r\n              label=\"Confirm password\"\r\n              margin=\"dense\"\r\n              value={confirmPassword}\r\n              onChange={onChange}\r\n            ></MTextField>\r\n          </div>\r\n          <MButton\r\n            name=\"submit\"\r\n            style={{ margin: \"3px 0px 2px\" }}\r\n            value={\"Submit\"}\r\n            color={\"primary\"}\r\n            onClick={onChange}\r\n            fullWidth={true}\r\n          >\r\n            Submit\r\n          </MButton>\r\n        </form>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Link href={ROUTES.LANDING} variant=\"body2\">\r\n              Home\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link href={ROUTES.SIGN_IN} variant=\"body2\">\r\n              {\"Login\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n        <MSnackbar\r\n          autoHideDuration={4000}\r\n          open={snackOpen}\r\n          vPos={\"bottom\"}\r\n          hPos={\"left\"}\r\n          message={snackMsg}\r\n          onClose={snackClose}\r\n        ></MSnackbar>\r\n\r\n        <Box mt={4}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Forgot;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({basename: `${process.env.PUBLIC_URL}`\r\n});","import React, { Component } from \"react\";\r\nimport { MButton } from \"../common/FormElements\";\r\n\r\nclass NoInternet extends Component {\r\n  onChange = e => {\r\n    try {\r\n      window.Android.checkInternet();\r\n    } catch (e) {}\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"NoInternet\">\r\n        <div className=\"connectionContainer\">\r\n          <img className=\"connectionImg\" src={require(\"../images/noInternet.png\")} alt=\"no Internet\" />\r\n          <p>Check your connection and try again.</p>\r\n          <MButton\r\n            style={{ margin: \"3px 0px 2px\" }}\r\n            value={\"Submit\"}\r\n            color={\"primary\"}\r\n            onClick={this.onChange}\r\n            fullWidth={true}\r\n            name={\"submit\"}\r\n          >\r\n            Retry\r\n          </MButton>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NoInternet;\r\n","import { Component } from \"react\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nexport class Helper extends Component {\r\n  getIndex = (array, name) => {\r\n    for (let i = 0; i < array.length; i++) {\r\n      const e = array[i];\r\n      if (e.name === name) {\r\n        return i;\r\n      }\r\n    }\r\n  };\r\n  showOverlay = () => {\r\n    document.getElementsByTagName(\"body\")[0].classList.add(\"fixbody\");\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.id = \"overlay\";\r\n    overlay.classList.add(\"overlay\");\r\n    const spinner = document.createElement(\"div\");\r\n    spinner.classList.add(\"lds-ripple\");\r\n    const spinner_inner1 = document.createElement(\"div\");\r\n    const spinner_inner2 = document.createElement(\"div\");\r\n    spinner.appendChild(spinner_inner1);\r\n    spinner.appendChild(spinner_inner2);\r\n    overlay.appendChild(spinner);\r\n    document.body.appendChild(overlay);\r\n    document.getElementById(\"overlay\").style.display = \"block\";\r\n  };\r\n  hideOverlay = () => {\r\n    document.getElementsByTagName(\"body\")[0].classList.remove(\"fixbody\");\r\n    const elem = document.getElementById(\"overlay\");\r\n    if (elem) document.body.removeChild(elem);\r\n  };\r\n  doLogout(props) {\r\n    props.gv.auth.signOut().then(e => {\r\n      if (localStorage.getItem(\"token\") != null) {\r\n        localStorage.removeItem(\"token\");\r\n      }\r\n      if (localStorage.getItem(\"uid\") != null) {\r\n        localStorage.removeItem(\"uid\");\r\n      }\r\n      if (localStorage.getItem(\"productInfo\") != null) {\r\n        localStorage.removeItem(\"productInfo\");\r\n      }\r\n      if (localStorage.getItem(\"remember_me\") != null) {\r\n        localStorage.removeItem(\"remember_me\");\r\n      }\r\n      props.history.push(ROUTES.LANDING);\r\n    });\r\n  }\r\n  getCurrentUser = auth => auth.currentUser;\r\n  doCreateUserWithEmailAndPassword = (email, password, auth) => auth.createUserWithEmailAndPassword(email, password);\r\n  doSignInWithEmailAndPassword = (email, password, auth) => auth.signInWithEmailAndPassword(email, password);\r\n  doSignOut = fb => fb.auth.signOut();\r\n  doPasswordReset = (email, fb) => fb.auth.sendPasswordResetEmail(email);\r\n  doPasswordUpdate = (password, fb) => fb.auth.currentUser.updatePassword(password);\r\n  // *** Database API ***\r\n  auctions = fb => fb.ref(\"auctions\");\r\n  users = fb => fb.ref(\"users\");\r\n  user = (uid, fb) => fb.ref(`users/${uid}`);\r\n  products = db => db.ref(\"products\");\r\n\r\n  bids = fb => fb.ref(\"bids\");\r\n  bid = (bid, fb) => fb.ref(`bids/${bid}`);\r\n}\r\nexport default { Helper };\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box } from \"@material-ui/core\";\r\nimport { Copyright, MCard, MAppBar, MMenu } from \"../common/FormElements\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as APIS from \"../../constants/fbapis\";\r\nclass Bidlist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.auctionsList = [];\r\n    //console.log(this.props.gv.db);\r\n    this.helper = this.props.helper;\r\n    const db = this.props.gv.db;\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n    } else {\r\n      this.state = {\r\n        onChange: this.handleChange(),\r\n        onAppBarClose: this.handleAppBarClose(),\r\n        apis: [\r\n          { name: APIS.PRODUCTS, data: [], url: this.helper.products(db) },\r\n          {\r\n            name: APIS.AUCTIONS,\r\n            data: [],\r\n            url: this.helper\r\n              .auctions(db)\r\n              .orderByChild(\"is_active\")\r\n              .equalTo(1)\r\n          }\r\n        ],\r\n        productList: []\r\n      };\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      this.current = 0;\r\n      //console.log(this.state.apis[this.current]);\r\n      this.total = this.state.apis.length;\r\n      this.helper.showOverlay();\r\n      this.getDataFromDB();\r\n    }\r\n  };\r\n  getDataFromDB = () => {\r\n    if (this.current < this.total) {\r\n      if (!this.props.gv[\"\" + this.state.apis[this.current].name]) {\r\n        this.state.apis[this.current].url.on(\"value\", snapshot => {\r\n          if (snapshot.val() === null) {\r\n            let apis_copy = this.state.apis;\r\n            apis_copy[this.current][\"data\"] = [];\r\n            this.setState(\r\n              {\r\n                apis: apis_copy\r\n              },\r\n              () => {\r\n                this.current++;\r\n                this.getDataFromDB();\r\n              }\r\n            );\r\n          } else {\r\n            const object = snapshot.val();\r\n            const _list = Object.keys(object).map(key => ({\r\n              ...object[key],\r\n              id: key\r\n            }));\r\n            let apis_copy = this.state.apis;\r\n            apis_copy[this.current][\"data\"] = _list;\r\n            this.setState(\r\n              {\r\n                apis: apis_copy\r\n              },\r\n              () => {\r\n                this.current++;\r\n                this.getDataFromDB();\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        let apis_copy = this.state.apis;\r\n        apis_copy[this.current][\"data\"] = this.props.gv[\"\" + this.state.apis[this.current].name];\r\n        this.setState(\r\n          {\r\n            apis: apis_copy\r\n          },\r\n          () => {\r\n            this.current++;\r\n            this.getDataFromDB();\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      const db = this.props.gv.db;\r\n      this.current = 0;\r\n      let auctionsIndex = this.helper.getIndex(this.state.apis, APIS.AUCTIONS);\r\n      this.auctionsList = this.state.apis[auctionsIndex].data;\r\n      let activeDaily = this.getActiveAuctionsList(\"daily\");\r\n      let activeWeekly = this.getActiveAuctionsList(\"weekly\");\r\n      for (let index = 0; index < activeDaily.length; index++) {\r\n        const e = activeDaily[index];\r\n        let sd = new Date(e.start_date);\r\n        let nw = new Date();\r\n        if (sd.getFullYear() === nw.getFullYear()) {\r\n          if (sd.getMonth() + 1 === nw.getMonth() + 1) {\r\n            if (sd.getDate() !== nw.getDate()) {\r\n              //console.log(sd.getDate(), nw.getDate());\r\n              e.is_active = 0;\r\n              this.helper\r\n                .auctions(db)\r\n                .child(e.id)\r\n                .update({ is_active: 0 })\r\n                .then(() => {\r\n                  this.current = 0;\r\n                  this.auctionsList = [];\r\n                  this.getDataFromDB();\r\n                });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (activeDaily.length === 0) {\r\n        let start_date = Date.now();\r\n        let sd = new Date(start_date);\r\n        let ed = new Date(start_date);\r\n        ed.setDate(ed.getDate() + 1);\r\n        let end_date = ed.getTime();\r\n        let is_active = 1;\r\n        let product_key = 1;\r\n        let type = \"daily\";\r\n        let auction_name = sd.getDate() + \"/\" + (sd.getMonth() + 1) + \"/\" + sd.getFullYear();\r\n        this.helper\r\n          .auctions(db)\r\n          .push({ auction_name, start_date, end_date, is_active, product_key, type })\r\n          .then(() => {\r\n            this.current = 0;\r\n            this.auctionsList = [];\r\n            this.getDataFromDB();\r\n          });\r\n      }\r\n      if (activeWeekly.length > 0) {\r\n        for (let index = 0; index < activeWeekly.length; index++) {\r\n          const e = activeWeekly[index];\r\n          let ed = new Date(e.end_date);\r\n          let nw = new Date();\r\n          if (ed.getFullYear() === nw.getFullYear()) {\r\n            if (ed.getMonth() + 1 === nw.getMonth() + 1) {\r\n              if (ed.getDate() - nw.getDate() === 0) {\r\n                e.is_active = 0;\r\n                this.helper\r\n                  .auctions(db)\r\n                  .child(e.id)\r\n                  .update({ is_active: 0 })\r\n                  .then(() => {\r\n                    this.current = 0;\r\n                    this.auctionsList = [];\r\n                    this.getDataFromDB();\r\n                  });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        let sd = new Date();\r\n        if (sd.getDay() === 5) {\r\n          let ed = new Date(sd);\r\n          ed.setDate(ed.getDate() + 7);\r\n          let end_date = ed.getTime();\r\n          let is_active = 1;\r\n          let start_date = sd.getTime();\r\n          let product_key = 2;\r\n          let type = \"weekly\";\r\n          let auction_name = sd.getDate() + \"/\" + (sd.getMonth() + 1) + \"/\" + sd.getFullYear() + \" weekly\";\r\n          this.props.firebase\r\n            .auctions()\r\n            .push({ auction_name, start_date, end_date, is_active, product_key, type })\r\n            .then(() => {\r\n              this.current = 0;\r\n              this.auctionsList = [];\r\n              this.getDataFromDB();\r\n            });\r\n        }\r\n      }\r\n\r\n      this.afterUpdate();\r\n    }\r\n  };\r\n  getActiveAuctionsList(type) {\r\n    let list = [];\r\n    for (let index = 0; index < this.auctionsList.length; index++) {\r\n      const e = this.auctionsList[index];\r\n      if (e.is_active === 1 && e.type === type) {\r\n        list.push(e);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n  afterUpdate = () => {\r\n    let prodsIndex = this.helper.getIndex(this.state.apis, APIS.PRODUCTS);\r\n    let prodsData = this.state.apis[prodsIndex].data;\r\n    let pl = [];\r\n    for (let i = 0; i < this.auctionsList.length; i++) {\r\n      let e1 = this.auctionsList[i];\r\n      for (let j = 0; j < prodsData.length; j++) {\r\n        let e2 = JSON.parse(JSON.stringify(prodsData[j]));\r\n        if (e1.product_key === parseInt(e2.id)) {\r\n          e2.auction_id = e1.id;\r\n          pl.push(e2);\r\n        }\r\n      }\r\n    }\r\n    this.setState({ productList: pl }, () => {\r\n      this.helper.hideOverlay();\r\n      try {\r\n        window.Android.contentLoaded();\r\n      } catch (error) {\r\n        //console.log(error);\r\n      }\r\n    });\r\n  };\r\n  handleAppBarClose = () => str => {\r\n    if (str === \"logout\") {\r\n      this.helper.doLogout(this.props);\r\n    } else if (str === \"winner\") {\r\n      this.props.history.push(ROUTES.WINNER);\r\n    }\r\n  };\r\n  handleChange = () => (event, idx) => {\r\n    if (event.currentTarget.name === \"bid_1\") {\r\n      this.props.gv.productInfo = this.state.productList[idx];\r\n      localStorage.setItem(\"productInfo\", JSON.stringify(this.state.productList[idx]));\r\n      this.props.history.push(ROUTES.BIDPAGE);\r\n    }\r\n  };\r\n  render() {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n      return <div></div>;\r\n    } else {\r\n      const { onChange, onAppBarClose, productList } = this.state;\r\n      const mCards = productList.map((pl, idx) => {\r\n        return (\r\n          <div style={{ marginBottom: 20 }} key={pl.auction_id}>\r\n            <MCard\r\n              name={\"bid_1\"}\r\n              actionEnabled={true}\r\n              title={pl.name}\r\n              image={pl.photo_url}\r\n              imageTitle={pl.name}\r\n              content={pl.description}\r\n              price={pl.price}\r\n              onChange={e => onChange(e, idx)}\r\n            ></MCard>\r\n          </div>\r\n        );\r\n      });\r\n      return (\r\n        <div>\r\n          <MAppBar\r\n            name=\"Products\"\r\n            handleClose={onAppBarClose}\r\n            menu={\r\n              <MMenu\r\n                menuitems={[\r\n                  { name: APIS.WINNER, value: \"Winner\" },\r\n                  { name: APIS.LOGOUT, value: \"Logout\" }\r\n                ]}\r\n                handleClose={onAppBarClose}\r\n              ></MMenu>\r\n            }\r\n          ></MAppBar>\r\n          <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: 20 }}>\r\n            {mCards}\r\n            <Box mt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Bidlist;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box, Paper, Grid } from \"@material-ui/core\";\r\nimport { Copyright, MCard, MTextField, MButton, MSnackbar, MMenu, MAppBar } from \"../common/FormElements\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as APIS from \"../../constants/fbapis\";\r\n\r\nclass BidPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n    } else {\r\n      this.helper = this.props.helper;\r\n      if (localStorage.getItem(\"uid\") !== null) {\r\n        this.props.gv.userId = localStorage.getItem(\"uid\");\r\n      }\r\n      if (localStorage.getItem(\"productInfo\") !== null) {\r\n        this.props.gv.productInfo = JSON.parse(localStorage.getItem(\"productInfo\"));\r\n      }\r\n      this.state = {\r\n        bidValue: 0,\r\n        onChange: this.handleChange(),\r\n        snackClose: this.snackClose(),\r\n        onAppBarClose: this.handleAppBarClose(),\r\n        handleIconClick: this.handleIconClick(),\r\n        uid: this.props.gv.userId,\r\n        pl: this.props.gv.productInfo,\r\n        snackMsg: \"\",\r\n        snackOpen: false\r\n      };\r\n      this.userBids = [];\r\n      if (localStorage.getItem(\"token\") === null) {\r\n        this.props.history.push(ROUTES.SIGN_IN);\r\n      }\r\n    }\r\n  }\r\n  handleAppBarClose = () => str => {\r\n    if (str === APIS.LOGOUT) {\r\n      this.helper.doLogout(this.props);\r\n    } else if (str === APIS.WINNER) {\r\n      this.props.history.push(ROUTES.WINNER);\r\n    } else if (str === APIS.BIDLIST) {\r\n      this.props.history.push(ROUTES.BIDLIST);\r\n    }\r\n  };\r\n  handleIconClick = () => e => {\r\n    this.props.history.push(ROUTES.BIDLIST);\r\n  };\r\n  snackClose = () => e => {\r\n    this.setState({ snackMsg: \"\", snackOpen: false }, () => {});\r\n  };\r\n  canUserBid = () => {\r\n    //console.log(this.userBids);\r\n\r\n    for (let i = 0; i < this.userBids.length; i++) {\r\n      const e = this.userBids[i];\r\n      if (e) {\r\n        if (e.auction_key + \"\" === this.state.pl.auction_id) {\r\n          let userLastBidDate = new Date(parseInt(e.biddt));\r\n          let ud = userLastBidDate.getDate();\r\n          let now = new Date();\r\n          let nd = now.getDate();\r\n          if (ud === nd) {\r\n            return false;\r\n          } else if (ud < nd) {\r\n            e.biddt = Date.now();\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.userBids.push({ auction_key: this.state.pl.auction_id, biddt: Date.now() });\r\n    return true;\r\n  };\r\n  handleChange = () => event => {\r\n    const db = this.props.gv.db;\r\n    this.helper.showOverlay();\r\n    if (event.currentTarget.name === \"submit\") {\r\n      if (this.state.bidValue > 0 && this.state.bidValue <= 100) {\r\n        this.helper\r\n          .user(this.props.gv.userId, db)\r\n          .once(\"value\")\r\n          .then(v => {\r\n            let user = v.val();\r\n            //console.log(user);\r\n            this.userBids = [];\r\n            if (user !== null) {\r\n              if (user.bids !== undefined) {\r\n                this.userBids = user.bids;\r\n              }\r\n            }\r\n            if (this.canUserBid()) {\r\n              this.helper\r\n                .bids(db)\r\n                .push({\r\n                  bid_price: this.state.bidValue,\r\n                  user_key: this.state.uid,\r\n                  product_key: this.state.pl.id,\r\n                  auction_key: this.state.pl.auction_id,\r\n                  biddt: Date.now()\r\n                })\r\n                .then(e => {\r\n                  this.helper\r\n                    .user(this.props.gv.userId, db)\r\n                    .update({ bids: this.userBids })\r\n                    .then(e => {\r\n                      setTimeout(() => {\r\n                        this.helper.hideOverlay();\r\n                        try {\r\n                          window.Android.showToast(\"Thanks for biding!\");\r\n                        } catch (error) {\r\n                          console.log(error);\r\n                        }\r\n                        this.props.history.push(ROUTES.BIDLIST);\r\n                      }, 2000);\r\n                      this.setState({ snackMsg: \"Thanks for biding!\", snackOpen: true }, () => {});\r\n                    });\r\n                });\r\n            } else {\r\n              setTimeout(() => {\r\n                this.helper.hideOverlay();\r\n                try {\r\n                  window.Android.showToast(\"You've already bided for this auction\");\r\n                } catch (error) {\r\n                  console.log(error);\r\n                }\r\n                this.props.history.push(ROUTES.BIDLIST);\r\n              }, 2000);\r\n              this.setState({ snackMsg: \"You've already bided for this auction\", snackOpen: true }, () => {});\r\n            }\r\n          });\r\n      } else {\r\n        this.setState({ snackMsg: \"Bid value can be greater than 0\", snackOpen: true }, () => {});\r\n        this.helper.hideOverlay();\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n      return <div></div>;\r\n    } else {\r\n      const { onChange, bidValue, pl, snackOpen, snackClose, snackMsg, onAppBarClose, handleIconClick } = this.state;\r\n      const handleInputChange = event => {\r\n        this.setState({\r\n          bidValue: parseFloat(event.target.value)\r\n        });\r\n      };\r\n      const handleBlur = e => {\r\n        if (bidValue < 0) {\r\n          this.setState({\r\n            value: 0\r\n          });\r\n        } else if (bidValue > 100) {\r\n          this.setState({\r\n            value: 100\r\n          });\r\n        } else {\r\n          this.setState({\r\n            bidValue: e.target.value\r\n          });\r\n        }\r\n      };\r\n      return (\r\n        <div>\r\n          <MAppBar\r\n            name=\"Bid\"\r\n            icon={true}\r\n            handleClose={onAppBarClose}\r\n            handleIconClick={handleIconClick}\r\n            menu={\r\n              <MMenu\r\n                menuitems={[\r\n                  { name: APIS.WINNER, value: \"Winner\" },\r\n                  { name: APIS.BIDLIST, value: \"Products\" },\r\n                  { name: APIS.LOGOUT, value: \"Logout\" }\r\n                ]}\r\n                handleClose={onAppBarClose}\r\n              ></MMenu>\r\n            }\r\n          ></MAppBar>\r\n          <Container component=\"main\" maxWidth=\"xs\">\r\n            <Grid container spacing={2} alignItems=\"center\" style={{ marginTop: 10 }}>\r\n              <Grid item xs={12}>\r\n                <MCard\r\n                  name={\"bid_1\"}\r\n                  actionEnabled={false}\r\n                  title={pl.name}\r\n                  image={pl.photo_url}\r\n                  imageTitle={pl.name}\r\n                  content={pl.description}\r\n                  price={pl.price}\r\n                ></MCard>\r\n              </Grid>\r\n            </Grid>\r\n            <Paper style={{ marginTop: 20, padding: 20 }} elevation={6}>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                  <input\r\n                    type=\"range\"\r\n                    min={0}\r\n                    max={100}\r\n                    value={typeof bidValue === \"number\" ? bidValue : 0}\r\n                    step={0.01}\r\n                    className=\"slider\"\r\n                    id=\"cno\"\r\n                    name=\"cno\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                  <MTextField\r\n                    required={true}\r\n                    type=\"number\"\r\n                    name=\"cno\"\r\n                    fullWidth={true}\r\n                    label=\"Bid Value\"\r\n                    value={bidValue}\r\n                    inputProps={{\r\n                      step: 0.1,\r\n                      min: 1,\r\n                      max: 100.0,\r\n\r\n                      \"aria-labelledby\": \"input-slider\"\r\n                    }}\r\n                    margin=\"dense\"\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    helperText=\"Number in range from 1 to 100, 2 point decimal allowed\"\r\n                  ></MTextField>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                  <MButton\r\n                    name=\"submit\"\r\n                    style={{ margin: \"3px 0px 2px\" }}\r\n                    value={\"Submit\"}\r\n                    color={\"primary\"}\r\n                    onClick={onChange}\r\n                    fullWidth={true}\r\n                  >\r\n                    Register Bid\r\n                  </MButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            <MSnackbar\r\n              autoHideDuration={1900}\r\n              open={snackOpen}\r\n              vPos={\"bottom\"}\r\n              hPos={\"left\"}\r\n              message={snackMsg}\r\n              onClose={snackClose}\r\n            ></MSnackbar>\r\n            <Box mt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default BidPage;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box, Paper } from \"@material-ui/core\";\r\nimport { Copyright, MTextField, MAppBar, MMenu } from \"../common/FormElements\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as APIS from \"../../constants/fbapis\";\r\nclass Winner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n    } else {\r\n      const db = this.props.gv.db;\r\n      this.helper = this.props.helper;\r\n      this.state = {\r\n        onChange: this.handleChange(),\r\n        onAppBarClose: this.handleAppBarClose(),\r\n        apis: [\r\n          {\r\n            name: APIS.AUCTIONS,\r\n            data: [],\r\n            url: this.helper\r\n              .auctions(db)\r\n              .orderByChild(\"is_active\")\r\n              .equalTo(0)\r\n          }\r\n        ],\r\n        auction_id: \"\",\r\n        bidlist: [],\r\n        winner_name: null,\r\n        bid_amount: null\r\n      };\r\n      this.objCopy = [];\r\n      this.current = 0;\r\n      this.total = this.state.apis.length;\r\n    }\r\n  }\r\n  handleAppBarClose = () => str => {\r\n    if (str === APIS.LOGOUT) {\r\n      this.helper.doLogout(this.props);\r\n    } else if (str === APIS.PRODUCTS) {\r\n      this.props.history.push(ROUTES.BIDLIST);\r\n    }\r\n  };\r\n  componentDidMount = () => {\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n    } else {\r\n      this.helper.showOverlay();\r\n      this.getDataFromDB();\r\n    }\r\n  };\r\n  getDataFromDB = () => {\r\n    if (this.current < this.total) {\r\n      if (!this.props.gv[\"\" + this.state.apis[this.current].name]) {\r\n        this.state.apis[this.current].url.on(\"value\", snapshot => {\r\n          const object = snapshot.val();\r\n          if (object === null) {\r\n            this.current++;\r\n            this.getDataFromDB();\r\n          } else {\r\n            const _list = Object.keys(object).map(key => ({\r\n              ...object[key],\r\n              id: key\r\n            }));\r\n            let apis_copy = this.state.apis;\r\n            apis_copy[this.current][\"data\"] = _list;\r\n            this.setState(\r\n              {\r\n                apis: apis_copy\r\n              },\r\n              () => {\r\n                this.current++;\r\n                this.getDataFromDB();\r\n              }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        let apis_copy = this.state.apis;\r\n        apis_copy[this.current][\"data\"] = this.props.gv[\"\" + this.state.apis[this.current].name];\r\n        this.setState(\r\n          {\r\n            apis: apis_copy\r\n          },\r\n          () => {\r\n            this.current++;\r\n            this.getDataFromDB();\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      this.helper.hideOverlay();\r\n    }\r\n  };\r\n  findWinnerByTime = _bids => {\r\n    let new_low_date = new Date(Date.now());\r\n    let bid;\r\n    for (let i = 0; i < _bids.length; i++) {\r\n      let e = _bids[i];\r\n      let edate = new Date(e.biddt);\r\n      if (edate < new_low_date) {\r\n        new_low_date = edate;\r\n        bid = e;\r\n      }\r\n    }\r\n    //console.log(bid);\r\n    this.declareWinner(bid);\r\n  };\r\n  findWinner = _bids => {\r\n    let bids = _bids;\r\n    let bidValues = this.getBidValuesFromBids(bids);\r\n    let minBid = Math.min(...bidValues);\r\n    let bidsWithMin = this.getBidsByValue(minBid);\r\n    if (bidsWithMin.length > 1) {\r\n      let refinedBids = this.removeInvalidBids(minBid);\r\n      this.findWinner(refinedBids);\r\n    } else {\r\n      if (bidsWithMin.length === 0) {\r\n        bids = JSON.parse(JSON.stringify(this.objCopy));\r\n        bidValues = this.getBidValuesFromBids(bids);\r\n        minBid = Math.min(...bidValues);\r\n        bidsWithMin = this.getBidsByValue(minBid);\r\n        this.findWinnerByTime(bidsWithMin);\r\n      } else {\r\n        //console.log(\"winner found\",this.objCopy);\r\n        //this.setState({bidlist:this.objCopy},()=>{console.log(\"no winner found\",this.state.bidlist)});\r\n        //console.log(bidsWithMin);\r\n        this.declareWinner(bidsWithMin);\r\n      }\r\n    }\r\n  };\r\n  getBidValuesFromBids = _bids => {\r\n    let bidValues = [];\r\n    for (let i = 0; i < _bids.length; i++) {\r\n      const e = _bids[i];\r\n      bidValues.push(parseFloat(e.bid_price));\r\n    }\r\n    return bidValues;\r\n  };\r\n  declareWinner = bid => {\r\n    const db = this.props.gv.db;\r\n    if (bid === null || bid === undefined) {\r\n      this.setState(\r\n        {\r\n          winner_name: \"No Winner Declared\",\r\n          bid_amount: 0\r\n        },\r\n        () => {\r\n          this.helper.hideOverlay();\r\n        }\r\n      );\r\n    } else {\r\n      this.helper\r\n        .user(bid[0].user_key, db)\r\n        .once(\"value\")\r\n        .then(v => {\r\n          let object = v.val();\r\n          this.setState(\r\n            {\r\n              winner_name: object.fname + \" \" + object.lname,\r\n              bid_amount: bid[0].bid_price\r\n            },\r\n            () => {\r\n              this.helper.hideOverlay();\r\n            }\r\n          );\r\n        });\r\n    }\r\n  };\r\n  removeInvalidBids = value => {\r\n    let bids = this.state.bidlist;\r\n    for (let i = 0; i < this.state.bidlist.length; i++) {\r\n      const e = this.state.bidlist[i];\r\n      if (e.bid_price === value) {\r\n        bids.splice(i, 1);\r\n        i--;\r\n      }\r\n    }\r\n    return bids;\r\n  };\r\n  getBidsByValue = value => {\r\n    let bids = [];\r\n    for (let i = 0; i < this.objCopy.length; i++) {\r\n      const e = this.objCopy[i];\r\n      if (parseFloat(e.bid_price) === value) {\r\n        bids.push(e);\r\n      }\r\n    }\r\n    return bids;\r\n  };\r\n  handleChange = () => (event, idx) => {\r\n    const db = this.props.gv.db;\r\n    if (event.target.name === \"auctionList\") {\r\n      this.helper.showOverlay();\r\n      this.setState({ auction_id: event.target.value }, () => {\r\n        this.helper\r\n          .bids(db)\r\n          .orderByChild(\"auction_key\")\r\n          .equalTo(this.state.auction_id)\r\n          .once(\"value\")\r\n          .then(v => {\r\n            let object = v.val();\r\n            if (object === null) {\r\n              this.declareWinner(null);\r\n            } else {\r\n              const _list = Object.keys(object).map(key => ({\r\n                ...object[key],\r\n                id: key\r\n              }));\r\n              this.setState({ bidlist: _list }, () => {\r\n                this.setState({ bidlist: _list });\r\n                this.objCopy = JSON.parse(JSON.stringify(_list));\r\n                this.findWinner(this.objCopy);\r\n              });\r\n            }\r\n          });\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    let showMessage = \"\";\r\n    let closedAuctions = true;\r\n    if (localStorage.getItem(\"token\") === null) {\r\n      this.props.history.push(ROUTES.SIGN_IN);\r\n      return <div></div>;\r\n    } else {\r\n      const { auction_id, onChange, winner_name, bid_amount, onAppBarClose } = this.state;\r\n      const auction_data = [];\r\n      const auction_list = this.state.apis[this.helper.getIndex(this.state.apis, APIS.AUCTIONS)].data;\r\n      for (let i = 0; i < auction_list.length; i++) {\r\n        const e = auction_list[i];\r\n        auction_data.push({ value: e.id, label: e.auction_name });\r\n      }\r\n      if (auction_data.length === 0) {\r\n        closedAuctions = false;\r\n        showMessage = \"No closed auctions\";\r\n      }\r\n      return (\r\n        <div>\r\n          <MAppBar\r\n            name=\"Winner\"\r\n            handleClose={onAppBarClose}\r\n            menu={\r\n              <MMenu\r\n                menuitems={[\r\n                  { name: APIS.PRODUCTS, value: \"Products\" },\r\n                  { name: APIS.LOGOUT, value: \"Logout\" }\r\n                ]}\r\n                handleClose={onAppBarClose}\r\n              ></MMenu>\r\n            }\r\n          ></MAppBar>\r\n          <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: 20 }}>\r\n            <div className=\"auctionList\" style={{ display: closedAuctions ? \"block\" : \"none\" }}>\r\n              <MTextField\r\n                name={\"auctionList\"}\r\n                type={\"select\"}\r\n                fullWidth={true}\r\n                data={auction_data}\r\n                label={\"Auction List\"}\r\n                value={auction_id}\r\n                onChange={onChange}\r\n                //helperText={\"Please select a issue type\"}\r\n              ></MTextField>\r\n            </div>\r\n            <div className=\"auctionList\" style={{ display: closedAuctions ? \"none\" : \"block\" }}>\r\n              <Paper elevation={1}>\r\n                <h4 align=\"center\">{showMessage}</h4>\r\n              </Paper>\r\n            </div>\r\n            <div className=\"winnerName\" style={{ display: winner_name ? \"block\" : \"none\", margin: \"20px auto\" }}>\r\n              <Paper elevation={4}>\r\n                <img src={require(\"../images/winner.jpg\")} alt=\"Winner\" className=\"winner_img\" />\r\n                <div className=\"winnerName\">\r\n                  <p className=\"name\">{winner_name}</p>\r\n                  <span className=\"bidamount\">Bid Amount: {bid_amount}</span>\r\n                </div>\r\n              </Paper>\r\n            </div>\r\n            <Box mt={4}>\r\n              <Copyright />\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Winner;\r\n","import React, { Component } from \"react\";\r\nimport Login from \"./components/users/login\";\r\nimport NewUser from \"./components/users/newUser\";\r\nimport Forgot from \"./components/users/forget\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport history from \"./common/history\";\r\nimport NoInternet from \"./components/common/NoInternet\";\r\nimport { Helper } from \"./common/helper\";\r\nimport Bidlist from \"./components/bids/bidlist\";\r\nimport BidPage from \"./components/bids/bidpage\";\r\nimport Winner from \"./components/bids/winner\";\r\nimport * as ROUTES from \"./constants/routes\";\r\nimport * as firebase from \"firebase/app\";\r\nimport * as fb from \"./constants/fb\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nconst config = fb.firebase.dev;\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fb = firebase.initializeApp(config);\r\n    this.Helper = new Helper(props, this.state);\r\n    this.state = {\r\n      gv: {\r\n        uid: \"1\",\r\n        us: this.updateState,\r\n        fb: this.fb,\r\n        auth: this.fb.auth(),\r\n        db: this.fb.database(),\r\n        ht: history,\r\n        hl: this.Helper\r\n      }\r\n    };\r\n  }\r\n  updateState = () => {\r\n    this.setState(this.state);\r\n  };\r\n  render() {\r\n    //hash = history.location.pathname;\r\n    const { gv } = this.state;\r\n    return (\r\n      <Router basename={\"/db\"} history={history}>\r\n        <Switch>\r\n          <Route path={ROUTES.SIGN_IN} component={props => <Login {...props} gv={gv} helper={this.Helper} />} />\r\n          <Route path={ROUTES.SIGN_UP} component={props => <NewUser {...props} gv={gv} helper={this.Helper} />} />\r\n          <Route\r\n            path={ROUTES.PASSWORD_FORGET}\r\n            component={props => <Forgot {...props} gv={gv} helper={this.Helper} />}\r\n          />\r\n          <Route path={ROUTES.BIDLIST} component={props => <Bidlist {...props} gv={gv} helper={this.Helper} />} />\r\n          <Route path={ROUTES.BIDPAGE} component={props => <BidPage {...props} gv={gv} helper={this.Helper} />} />\r\n          <Route path={ROUTES.WINNER} component={props => <Winner {...props} gv={gv} helper={this.Helper} />} />\r\n          <Route path={ROUTES.NOINTERNET} component={props => <NoInternet {...props} gv={gv} helper={this.Helper} />} />\r\n          <Route path=\"*\" component={props => <Login {...props} gv={gv} helper={this.Helper} />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","export const firebase = {\r\n  dev: {\r\n    apiKey: \"AIzaSyBxWAv-UhRRx2_1etDDSo4b_ot9U046pvM\",\r\n    authDomain: \"madbids-e13ee.firebaseapp.com\",\r\n    databaseURL: \"https://madbids-e13ee.firebaseio.com\",\r\n    projectId: \"madbids-e13ee\",\r\n    storageBucket: \"madbids-e13ee.appspot.com\",\r\n    messagingSenderId: \"23154373829\",\r\n    appId: \"1:23154373829:web:91de7aaedafb3b2c\"\r\n  },\r\n  prod: {}\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <App\n    ref={App => {\n      window.App = App;\n    }}\n  />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}